 kubectl describe csv -n argocd argocd-operator.v0.8.0  | tail -n 20
    Target Port:      9443
    Type:             ConversionWebhook
    Webhook Path:     /convert
Status:
  Cleanup:
  Conditions:
    Last Transition Time:  2023-12-21T10:48:41Z
    Last Update Time:      2023-12-21T10:48:41Z
    Message:               OwnNamespace InstallModeType not supported, cannot configure to watch own namespace
    Phase:                 Failed
    Reason:                UnsupportedOperatorGroup
  Last Transition Time:    2023-12-21T10:48:41Z
  Last Update Time:        2023-12-21T10:48:41Z
  Message:                 OwnNamespace InstallModeType not supported, cannot configure to watch own namespace
  Phase:                   Failed
  Reason:                  UnsupportedOperatorGroup
Events:
  Type     Reason                    Age                  From                        Message
  ----     ------                    ----                 ----                        -------
  Warning  UnsupportedOperatorGroup  102s (x2 over 102s)  operator-lifecycle-manager  OwnNamespace InstallModeType not supported, cannot configure to watch own namespace

----------------------------


ARGO_VERSION="v2.9.3"
GITHUB_URL="https://raw.githubusercontent.com/argoproj-labs/argocd-operator/$ARGO_OPERATOR_VERSION"

WAIT_TIMEOUT=120

wait_for_exist() {
  xtrace=$(set +o|grep xtrace); set +x
  local ns=${1?namespace is required}; shift
  local type=${1?type is required}; shift
  local max_wait_secs=${1?max_wait_secs is required}; shift
  local interval_secs=2
  local start_time=$(date +%s)
  while true; do
    echo "Waiting for $type $*"

    current_time=$(date +%s)
    if (( (current_time - start_time) > max_wait_secs ))
    then
      echo "Waited for pods in namespace \"$ns\" (selected using $@) to exist for $max_wait_secs seconds without luck. Returning with error."
      return 1
    fi

    if kubectl -n "$ns" get "$type" "$@" -o=jsonpath='{.items[0].metadata.name}' >/dev/null 2>&1
    then
      break
    else
      sleep $interval_secs
    fi

